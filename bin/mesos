#!/usr/bin/env python

import os
import sys

import config
import mesos

from mesos.docopt import docopt


VERSION = "Mesos CLI 0.1"

SHORT_HELP = "Perform operations on a running mesos cluster."

USAGE = \
"""Mesos CLI

Usage:
  mesos (-h | --help)
  mesos --version
  mesos <command> [<args>...]

Options:
  -h --help  Show this screen.
  --version  Show version info.

Commands:
{commands}
See 'mesos help <command>' for more information on a specific command.
"""


def autocomplete(cmds, plugins, current_word, argv):
    """
    Perform autocomplete for the given input arguments.
    If not completing a top level command (or "help"), this function passes
    the arguments down to the appropriate plugins for per-command
    autocompletion.
    """
    option = "default"

    if len(argv) > 0 and argv[0] == "help":
        argv = argv[1:]

    comp_words = list(cmds.keys()) + ["help"]
    comp_words = mesos.util.completions(comp_words, current_word, argv)
    if comp_words != None:
        return (option, comp_words)

    plugin = mesos.util.get_module(plugins, argv[0])
    plugin_class = getattr(plugin, plugin.PLUGIN_CLASS)
    return plugin_class(config).__autocomplete_base__(current_word, argv[1:])


def main(argv):
    # Initialize the various plugins
    plugins = mesos.util.import_modules(config.MESOS_CLI_PLUGINS, "plugins")

    cmds = {
        mesos.util.get_module(plugins, a).PLUGIN_NAME:
            mesos.util.get_module(plugins, a).SHORT_HELP
            for a in plugins.keys()
    }

    # Parse all incoming arguments using docopt.
    command_strings = ""
    if cmds != {}:
        command_strings = mesos.util.format_commands_help(cmds)
    usage = USAGE.format(commands=command_strings)

    arguments = docopt(usage, argv=argv, version=VERSION, options_first=True)

    cmd = arguments["<command>"]
    argv = arguments["<args>"]

    # Use the meta-command "__autocomplete__" to perform autocompletion on
    # the remaining arguments.
    if cmd == "__autocomplete__":
        current_word = argv[0]
        argv = argv[1:]

        option, comp_words = autocomplete(cmds, plugins, current_word, argv)
        print option
        print " ".join(comp_words)

    # Use the meta-command "help" to print help information for the supplied
    # command and its subcommands.
    elif cmd == "help":
        if len(argv) > 0 and argv[0] in cmds:
            plugin = mesos.util.get_module(plugins, argv[0])
            plugin_class = getattr(plugin, plugin.PLUGIN_CLASS)
            plugin_class(config).main(argv[1:] + ["--help"])
        else:
            main(["--help"])

    # Run a command through its plugin if it matches in the arguments.
    elif cmd in cmds.keys():
        plugin = mesos.util.get_module(plugins, cmd)
        plugin_class = getattr(plugin, plugin.PLUGIN_CLASS)
        plugin_class(config).main(argv)

    # Print help information if no commands match in the arguments.
    else:
        main(["--help"])


if __name__ == "__main__":
    main(sys.argv[1:])
